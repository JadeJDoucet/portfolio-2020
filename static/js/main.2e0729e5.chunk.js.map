{"version":3,"sources":["logo.svg","pages/Home.js","pages/About.js","pages/Projects.js","pages/Blogs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","library","add","fab","Home","id","src","logo","className","alt","href","icon","About","Projects","target","rel","Blogs","SwiperCore","use","EffectCube","Mousewheel","Pagination","App","pages","direction","effect","grabCursor","loop","mousewheel","pagination","clickable","renderBullet","index","navIndexToPage","map","page","i","key","tag","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,kC,+MCM3CC,IAAQC,IAAIC,KA4BGC,MA1Bf,WACI,OACI,yBAAKC,GAAG,QACJ,yBAAKC,IAAKC,IAAMC,UAAU,WAAWC,IAAI,SACzC,oFAEA,2CACA,gEAEA,yBAAKD,UAAU,aACX,uBAAGE,KAAK,uCACJ,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,eAEnC,uBAAGD,KAAK,kCACJ,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,aAEnC,uBAAGD,KAAK,8BACR,kBAAE,IAAF,CAAkBC,KAAM,CAAC,MAAO,WAGpC,6BAAK,6BACL,sDC3BG,SAASC,IACpB,OACI,yBAAKP,GAAG,SACJ,yBAAKA,GAAG,iBACJ,wBAAIG,UAAU,cAAd,OACA,krBAOJ,yBAAKH,GAAG,iBACJ,yBAAKG,UAAU,OACX,yCACA,wBAAIA,UAAU,UACd,wBAAIA,UAAU,eAAd,cACA,wBAAIA,UAAU,eAAd,qBACA,wBAAIA,UAAU,eAAd,wBACA,wBAAIA,UAAU,eAAd,aACA,wBAAIA,UAAU,eAAd,YAIJ,yBAAKA,UAAU,OACX,wCACA,wBAAIA,UAAU,UACd,wBAAIA,UAAU,eAAd,QACA,wBAAIA,UAAU,eAAd,aACA,wBAAIA,UAAU,eAAd,4BACA,wBAAIA,UAAU,eAAd,mBACA,wBAAIA,UAAU,eAAd,SAIJ,yBAAKA,UAAU,OACX,sCACA,wBAAIA,UAAU,UACd,wBAAIA,UAAU,eAAd,OACA,wBAAIA,UAAU,eAAd,SACA,wBAAIA,UAAU,eAAd,SACA,wBAAIA,UAAU,eAAd,iBCxCL,SAASK,IAGpB,OACI,yBAAKR,GAAG,YACJ,uBAAGG,UAAU,eAAeE,KAAK,wDAAwDI,OAAO,SAASC,IAAI,uBACzG,yBAAKP,UAAU,WACf,wBAAIA,UAAU,iBAAd,aAIJ,yBAAKA,UAAU,WACX,wBAAIA,UAAU,iBAAd,oBAGJ,yBAAKA,UAAU,WACX,wBAAIA,UAAU,iBAAd,W,MChBD,SAASQ,IAEpB,OACI,yBAAKX,GAAG,SAAR,sB,gECKRY,IAAWC,IAAI,CAACC,IAAYC,IAAYC,MAoDzBC,MAjDf,WAKE,IAAMC,EAAQ,CAAC,kBAAC,EAAD,MACf,kBAACV,EAAD,MACA,kBAACD,EAAD,MACA,kBAACI,EAAD,OAkBA,OACE,6BACE,kBAAC,IAAD,CACEQ,UAAU,WACVC,OAAO,OACPC,YAAY,EACZC,MAAM,EACNC,YAAY,EACZC,WAAY,CAAEC,WAAW,EAAMC,aAAc,SAAUC,EAAOxB,GAC5D,MAAM,gBAAN,OAAuBA,EAAvB,sBAxBN,SAAwBwB,GACtB,OAAOA,GACL,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,WACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,QAET,QAAS,MAAO,QAagCC,CAAeD,GAA7D,cAIDT,EAAMW,KAAI,SAACC,EAAMC,GAChB,OAAO,kBAAC,IAAD,CAAaC,IAAG,gBAAWD,GAAKE,IAAI,MAAMH,SC1CvCI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2e0729e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from '../logo.svg';\n// Add FontAwesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nlibrary.add(fab);\n\nfunction Home() {\n    return (\n        <div id=\"home\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h2>I'm under construction, but feel free to look around</h2>\n            \n            <h2>Jade Doucet</h2>\n            <h4>Software Engineer, Web Developer</h4>\n\n            <div className=\"icons-row\">\n                <a href=\"https://linkedin.com/in/jadejdoucet\">\n                    <FontAwesomeIcon icon={['fab', 'linkedin']} />\n                </a>\n                <a href=\"https://github.com/JadeJDoucet\">\n                    <FontAwesomeIcon icon={['fab', 'github']} />\n                </a>\n                <a href=\"https://dev.to/jadejdoucet\">\n                < FontAwesomeIcon icon={['fab', 'dev']} />\n                </a>\n            </div>\n            <br/><br/>\n            <h1>↓ Scroll ↓</h1>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\n\nexport default function About() {\n    return (\n        <div id=\"about\">\n            <div id=\"bio-container\">\n                <h2 className=\"page-title\">Bio</h2>\n                <p>From a childhood of playing video games, to developing them in highschoool, and now creating full stack applications, you could say I'm an avid lover of technology.\n                    I moved to the New Orleans area from Luling, a small town 30 minutes outside of New Orleans, with a hope for constructing a future for myself that I would enjoy.\n                    I studied JavaScript and Unity game development while working in an oil refinery, and eventually left to start a career as a Software Developer.\n                    In 2019, I attended Operation Spark in New Orleans where I developed a solid foundation of JavaScript,\n                     and now work as a Full Stack Developer where I can utilize my JavaScript skill set.\n                </p>\n            </div>\n            <div id=\"job-container\">\n                <div className=\"job\">\n                    <h3>Front-End</h3>\n                    <ul className=\"skills\">\n                    <li className=\"skills-item\">JavaScript</li>\n                    <li className=\"skills-item\">HTML / CSS / Sass</li>\n                    <li className=\"skills-item\">React / React Native</li>\n                    <li className=\"skills-item\">AngularJS</li>\n                    <li className=\"skills-item\">JQuery</li>\n                    </ul>\n                </div>\n\n                <div className=\"job\">\n                    <h3>Back-End</h3>\n                    <ul className=\"skills\">\n                    <li className=\"skills-item\">Node</li>\n                    <li className=\"skills-item\">ExpressJS</li>\n                    <li className=\"skills-item\">SQL - MYSQL / PostGreSQL</li>\n                    <li className=\"skills-item\">NoSQL - MongoDB</li>\n                    <li className=\"skills-item\">PHP</li>\n                    </ul>\n                </div>\n\n                <div className=\"job\">\n                    <h3>Extras</h3>\n                    <ul className=\"skills\">\n                    <li className=\"skills-item\">Git</li>\n                    <li className=\"skills-item\">Agile</li>\n                    <li className=\"skills-item\">Linux</li>\n                    <li className=\"skills-item\">WordPress</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\n// Maybe use material UI menu\n\nexport default function Projects() {\n    // Maybe float image right to have text go around it\n    // If not, a div with flex-row\n    return (\n        <div id=\"projects\">\n            <a className=\"project-link\" href=\"https://github.com/Assert-Reconceptualization/ScannAr\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <div className=\"project\">\n                <h2 className=\"project-title\">ScannAR</h2>\n                \n                </div>\n            </a>\n            <div className=\"project\">\n                <h2 className=\"project-title\">Adopt-A-Pothole</h2>\n                \n            </div>\n            <div className=\"project\">\n                <h2 className=\"project-title\">Readr</h2>\n                \n            </div>\n\n        </div>\n    );\n}","import React from'react';\nimport axios from 'axios';\n\nexport default function Blogs() {\n    // Make Dev.to API calls here\n    return (\n        <div id=\"blogs\">\n            I'm a place holder\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Projects from './pages/Projects';\nimport Blogs from './pages/Blogs';\n// Swiper\nimport { Swiper, SwiperSlide }  from 'swiper/react';\nimport SwiperCore, { EffectCube, Mousewheel, Pagination } from 'swiper';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/effect-cube/effect-cube.scss';\nSwiperCore.use([EffectCube, Mousewheel, Pagination ]);\n\n\nfunction App() {\n  // currPage will tell the nav bar which item is to be highlighted, pages will setCurrPage when in view\n  // Will ned to use the prop 'isActive' with Swiper slides to handle navigation\n  //https://swiperjs.com/react/#swiperslide-props\n\n  const pages = [<Home />,\n  <Projects />,\n  <About />,\n  <Blogs />]; \n\n    \n    function navIndexToPage(index){\n      switch(index) {\n        case 0:\n          return 'Home';\n        case 1: \n          return 'Projects';\n        case 2:\n          return 'About';\n        case 3: \n          return 'Blogs';\n\n        default: return 'Home';\n      }\n    }\n// maybe add virtual, mousewheel isnt working for this\n  return (\n    <div>\n      <Swiper\n        direction='vertical'\n        effect='cube'\n        grabCursor={true}\n        loop={true}\n        mousewheel={true}\n        pagination={{ clickable: true, renderBullet: function (index, className) {\n          return `<span class=\"${className} nav-item\">${navIndexToPage(index)}</span>`;\n          }\n        }}\n      >\n        {pages.map((page, i) => {\n          return <SwiperSlide key={`slide=${i}`} tag=\"li\">{page}</SwiperSlide>;\n        })}\n      </Swiper>\n    </div>\n  );\n}\n// Add page for projects - maybe use github API\n// Add page for blogs - use dev.to API\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}